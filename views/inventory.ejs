<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Google Fonts - Roboto -->
    <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700;900&display=swap">
    <!-- Icons -->
    <link rel="stylesheet" type="text/css" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <!--BootStrap 4-->
    <link rel="stylesheet" type="text/css" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
    <!-- Custom CSS -->
    <link rel="stylesheet" type="text/css" href="/css/preloader.css">
    <link rel="stylesheet" type="text/css" href="/css/main.css">
    <link rel="stylesheet" type="text/css" href="/css/inventory.css">
    <link rel="stylesheet" type="text/css" href="/css/modal.css">

    <title>Stashed</title>
</head>

<body>
    <div class="wrapper">
        <div class="preloader"></div>
    </div>

    <nav id="navbar" class="align-middle navbar navbar-dark navbar-expand-md fixed-top">
        <a id="navbar-logo" class="navbar-brand" href="/">
            <img src="/images/Icon2.png" width="50" height="50" class="align-middle">
        </a>

        <!-- Collapse Nav When Dimensions Shrink -->
        <button class="navbar-toggler custom-toggler" data-toggle="collapse" data-target="#navLinks">
            <span class="navbar-toggler-icon"></span>
        </button>

        <!--NavBar Links-->
        <div id="navLinks" class="collapse navbar-collapse">
            <!--Right Side Nav Bar-->
            <ul class="navbar-nav ml-auto" style="background-color: rgba(33, 34, 51, 0.7); padding: 10px 15px; border-radius: 25px; margin-right: 20px;">
                <li class="nav-item d-flex">
                    <a class="nav-link align-self-center" href="#statistics"><strong>Statistics</strong></a>
                </li>
            </ul>
            <ul class="navbar-nav d-none d-sm-flex" style="background-color: rgba(33, 34, 51, 0.7); padding: 0px 25px 0px 15px; border-radius: 25px;">
                <li class=" nav-item">
                    <a class="nav-link" href="">
                        <img src="<%= currentUser.discordImage %>" style="border-radius: 25px" width="50" height="50">
                    </a>
                </li>
                <li class="nav-item d-flex">
                    <h5 class="align-self-center" style="margin: 0;"><%= currentUser.name %></h5>
                </li>
            </ul>
        </div>
    </nav>

    <section id="inventory">
        <div class="container-fluid d-flex justify-content-center" style="height: 100%;">
            <div class="row align-items-center justify-content-around" style="width:100%;">

                <div id="inventory-list" class="init inventory-block col-12 col-lg-5" data-delay="0s">
                    <div class="d-flex">
                        <h4>Inventory</h4>
                        <%- include("./newItemModal") %>

                        <div class="inventory-scroll-list">
                            <!-- Each Item -->
                            <% itemList.forEach((item) => { %>
                            <!-- model for each item object -->
                            <%- include("./itemDisplay", {item}); %>
                            <% }) %>
                        </div>
                    </div>

                    <div id="sale-list" class="init inventory-block col-12 col-lg-6" data-delay="0.5s">

                        <div class="d-flex">
                            <h4>Sales</h4>
                            <%- include("./newSaleModal") %>
                        </div>

                        <div class="sale-scroll-list">

                            <!-- Each Sale -->
                            <% saleList.forEach((sale) => { %>
                            <!-- model for each sale object -->
                            <%- include("./saleDisplay", {sale}); %>
                            <% }) %>
                        </div>
                    </div>

                    <div id="stats" class="init inventory-block col-12 col-lg-11" style="height: auto;" data-delay="1s">
                        <h4>Statistics</h4>
                        <div class="row d-flex justify-content-center justify-content-lg-around" style="width: 100%; height: 90%; margin: 0;">
                            <div class="col-12 col-lg-4 statistics-sections d-flex align-content-center flex-column">
                                <div class="statistics-text-block">
                                    <div class="statistics-text">
                                        Number of items in inventory
                                    </div>
                                    <div id="numItem" class="statistics-text-highlighted"></div>
                                </div>
                                <div class="statistics-text-block">
                                    <div class="statistics-text">
                                        Value of Inventory
                                    </div>
                                    <div id="inventoryValue" class="statistics-text-highlighted"></div>
                                </div>
                                <div class="statistics-text-block">
                                    <div class="statistics-text">
                                        Number of Sales
                                    </div>
                                    <div id="numSale" class="statistics-text-highlighted"></div>
                                </div>
                                <div class="statistics-text-block">
                                    <div class="statistics-text">
                                        Net Sales
                                    </div>
                                    <div id="netSale" class="statistics-text-highlighted"></div>
                                </div>
                                <div class="statistics-text-block">
                                    <div class="statistics-text">
                                        Profit
                                    </div>
                                    <div id="profit" class="statistics-text-highlighted" style="color:rgb(74, 255, 147)"></div>
                                </div>
                            </div>

                            <!-- graph -->
                            <div class="col-12 col-lg-7 statistics-sections d-flex align-items-center" style="padding: 30px; background-color: rgb(45, 47, 73); min-height:70vh;">
                                <canvas id="myChart" width="100%" height="100%"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
    </section>


    <!-- Scripts -->
    <script src="/js/ejs.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>

    <!-- preloader -->
    <script src="/js/preloader.js"></script>

    <!-- animations -->
    <script src="/js/inventory.js"></script>

    <!-- Ajax buttons -->
    <script src="/js/inventoryAjax.js"></script>

    <!-- Chart js cdn -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>

    <!-- Line Graph -->
    <script type="text/javascript">
        const ctx = document.getElementById('myChart');
        let sales = JSON.parse('<%- JSON.stringify(saleList) %>')

        let numOfSales = new Array()
        let cumulativeProfit = new Array()

        for (x = 0; x < sales.length; x++) {
            numOfSales.push(x);
            if (x === 0) {
                cumulativeProfit.push(parseFloat(sales[x].profit))
            } else {
                cumulativeProfit.push(parseFloat(cumulativeProfit[x - 1]) + parseFloat(sales[x].profit.replace(/,/g, "")))
            }
        }

        const myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: numOfSales,
                datasets: [{
                    label: 'Total Profit',
                    data: cumulativeProfit,
                    backgroundColor: 'rgba(71, 187, 115, .2)',
                    borderColor: 'rgba(71, 187, 115, 1)',
                    borderWidth: 5
                }]
            },
            options: {

                responsive: true,
                maintainAspectRatio: false,

                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true,
                            callback: function (value, index, values) {
                                return '$' + value;
                            }
                        }
                    }],
                    xAxes: [{
                        ticks: {
                            beginAtZero: true,
                            callback: function (value, index, values) {
                                return 1 + value;
                            }
                        },
                        scaleLabel: {
                            display: true,
                            labelString: 'Sales'
                        }
                    }]
                },
            }
        });
    </script>

    <script>
        let itemList = JSON.parse('<%- JSON.stringify(itemList) %>')
        let saleList = JSON.parse('<%- JSON.stringify(saleList) %>')

        function numItems(itemList) {
            $("#numItem").html(itemList.length)
        }
        function numSales(saleList) {
            $("#numSale").html(saleList.length)
        }
        function itemValue(itemList) {
            let inventoryTotal = 0;
            itemList.forEach((item) => {
                inventoryTotal += parseFloat(item.purchasedPrice)
            })
            $("#inventoryValue").html(new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(inventoryTotal))
        }
        function netSale(saleList) {
            let saleTotal = 0;
            saleList.forEach((sale) => {
                saleTotal += parseFloat(sale.soldPrice)
            })
            $("#netSale").html(new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(saleTotal))
        }
        function profit(saleList) {
            let profitTotal = 0;
            saleList.forEach((sale) => {
                profitTotal += parseFloat(sale.profit)
            })
            $("#profit").html(new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(profitTotal))
        }
        function generateStats(itemList, saleList) {
            numItems(itemList)
            numSales(saleList)
            itemValue(itemList)
            netSale(saleList)
            profit(saleList)
        }
        generateStats(itemList, saleList)
    </script>
</body>

</html>